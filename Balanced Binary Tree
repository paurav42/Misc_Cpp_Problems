Balanced Binary Tree:  
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool baltree = true;
    bool isBalanced(TreeNode* root) {
        
        heightTree(root);
        return baltree;
    }
    
    int heightTree(TreeNode* root){
         if (root == nullptr)
        {
            return 0;
        }
        
        int h_L = heightTree(root->left);
        int h_R = heightTree(root->right);
        
        if (abs(h_L - h_R)>1)
        {
            baltree = false;
            return 0;
        }
        
        return max(h_L+1, h_R+1);
        
    }
};

